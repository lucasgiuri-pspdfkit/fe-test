// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal should render modal 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="fixed inset-0 flex items-center justify-center z-50 bg-white bg-opacity-60"
        data-testid="modal"
      >
        <div
          class="bg-white w-full max-w-md p-6 rounded-lg shadow-lg flex flex-col"
        >
          <div
            class="flex justify-center pb-6"
          >
            <img
              alt="placeholder"
              class="rounded-3xl overflow-hidden"
              data-nimg="1"
              decoding="async"
              height="400"
              loading="lazy"
              src="/_next/image?url=https%3A%2F%2Fvia.placeholder.com%2F400&w=828&q=75"
              srcset="/_next/image?url=https%3A%2F%2Fvia.placeholder.com%2F400&w=640&q=75 1x, /_next/image?url=https%3A%2F%2Fvia.placeholder.com%2F400&w=828&q=75 2x"
              style="color: transparent;"
              width="400"
            />
          </div>
          <div
            class="flex flex-col gap-y-3"
          >
            <h3
              class="text-2xl
        font-avenirHeavy font-black
        text-gray-500"
            >
              Test title
            </h3>
            <p
              class="whitespace-pre-line  text-gray-500"
            >
              Test location
            </p>
            <div
              class="flex gap-x-2"
            >
              <h4
                class="text-lg
      
      text-gray-500"
              >
                3/5/2021 2:00:00
              </h4>
              <h4
                class="text-lg
      
      text-gray-500"
              >
                -
              </h4>
              <h4
                class="text-lg
      
      text-gray-500"
              >
                3/5/2021 2:00:00
              </h4>
            </div>
          </div>
          <div
            class="flex justify-center pt-6 lg:hidden"
          >
            <button
              class="bg-blue-100 text-white font-avenirHeavy py-3 px-7 rounded-lg"
              type="button"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="fixed inset-0 flex items-center justify-center z-50 bg-white bg-opacity-60"
      data-testid="modal"
    >
      <div
        class="bg-white w-full max-w-md p-6 rounded-lg shadow-lg flex flex-col"
      >
        <div
          class="flex justify-center pb-6"
        >
          <img
            alt="placeholder"
            class="rounded-3xl overflow-hidden"
            data-nimg="1"
            decoding="async"
            height="400"
            loading="lazy"
            src="/_next/image?url=https%3A%2F%2Fvia.placeholder.com%2F400&w=828&q=75"
            srcset="/_next/image?url=https%3A%2F%2Fvia.placeholder.com%2F400&w=640&q=75 1x, /_next/image?url=https%3A%2F%2Fvia.placeholder.com%2F400&w=828&q=75 2x"
            style="color: transparent;"
            width="400"
          />
        </div>
        <div
          class="flex flex-col gap-y-3"
        >
          <h3
            class="text-2xl
        font-avenirHeavy font-black
        text-gray-500"
          >
            Test title
          </h3>
          <p
            class="whitespace-pre-line  text-gray-500"
          >
            Test location
          </p>
          <div
            class="flex gap-x-2"
          >
            <h4
              class="text-lg
      
      text-gray-500"
            >
              3/5/2021 2:00:00
            </h4>
            <h4
              class="text-lg
      
      text-gray-500"
            >
              -
            </h4>
            <h4
              class="text-lg
      
      text-gray-500"
            >
              3/5/2021 2:00:00
            </h4>
          </div>
        </div>
        <div
          class="flex justify-center pt-6 lg:hidden"
        >
          <button
            class="bg-blue-100 text-white font-avenirHeavy py-3 px-7 rounded-lg"
            type="button"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
